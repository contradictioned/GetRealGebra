function prepareExamples() {
    for (var a = document.getElementById("examples").getElementsByTagName("li"), b = 0; b < a.length; b++) a[b].onclick = insertExample;
}

function insertExample() {
    var a = this.innerHTML.replace("&lt;", "<");
    a = a.replace("&gt;", ">"), document.getElementById("input").value = a, execQuery();
}

function execQuery() {
    var a = document.getElementById("input").value;
    document.getElementById("error_output").innerHTML = "";
    var b = document.getElementById("result_output").getElementsByTagName("table");
    b.length > 0 && b[0].remove();
    try {
        result = QueryParser.parse(a);
    } catch (c) {
        document.getElementById("error_output").innerHTML = c;
    }
    result.exec();
    var d = build_table(result.result);
    document.getElementById("result_output").appendChild(d);
}

function BaseRelation(a) {
    this.result = new Relation(), this.name = a;
}

function ColumnRenaming(a, b) {
    this.renaming = a, this.child = b;
}

function Cross(a, b) {
    this.left = a, this.right = b;
}

function Intersection(a, b) {
    this.left = a, this.right = b;
}

function NaturalJoin(a, b) {
    this.left = a, this.right = b;
}

function Projection(a, b) {
    this.attrs = a, this.result = void 0, this.child = b, this.indecesToStay = [];
}

function RelationRenaming(a, b) {
    this.new_name = a, this.child = b;
}

function Selection(a, b) {
    this.predicate = a, this.child = b;
}

function Setminus(a, b) {
    this.left = a, this.right = b;
}

function ThetaJoin(a, b, c) {
    this.left = a, this.right = b, this.predicate = c;
}

function Union(a, b) {
    this.left = a, this.right = b;
}

function Relation() {
    this.name = void 0, this.attributes = [], this.tuples = [];
}

function build_table(a) {
    var b = document.createElement("table");
    b.classList.add("relation");
    var c = document.createElement("caption");
    c.innerHTML = void 0 == a.name ? "RESULT" : a.name, b.appendChild(c), fillTableHeader(b, a.attributes);
    var d = document.createElement("tbody");
    b.appendChild(d);
    for (var e = 0; e < a.tuples.length; e++) {
        var f = createRow(a.tuples[e], a.attributes);
        d.appendChild(f);
    }
    return b;
}

function fillTableHeader(a, b) {
    var c = document.createElement("thead"), d = document.createElement("tr");
    c.appendChild(d);
    for (var e = 0; e < b.length; e++) {
        var f = document.createElement("th");
        f.innerHTML = b[e], d.appendChild(f);
    }
    a.appendChild(c);
}

function createRow(a, b) {
    for (var c = document.createElement("tr"), d = 0; d < b.length; d++) {
        var e = document.createElement("td");
        e.innerHTML = a.values[d], c.appendChild(e);
    }
    return c;
}

function Tuple(a, b) {
    this.attributes = a, this.values = b;
}

GR = {}, window.onload = function() {
    prepareExamples(), document.getElementById("input").onkeypress = function(a) {
        a || (a = window.event);
        var b = a.keyCode || a.which;
        "13" == b && execQuery();
    };
}, BaseRelation.prototype.exec = function() {
    var a = this.findTable(this.name);
    this.result.attributes = this.getAttrsFromTable(a), this.getTuples(a, this.result.attributes);
}, BaseRelation.prototype.getAttrsFromTable = function(a) {
    var b = a.getElementsByTagName("th");
    if (0 === b.length) throw "Table seems to have no columns.";
    for (var c = new Array(b.length), d = 0; d < b.length; d++) {
        var e = b[d].innerHTML;
        c[d] = [ this.name, e ];
    }
    return c;
}, BaseRelation.prototype.rowToArray = function(a, b) {
    for (var c = [], d = a.getElementsByTagName("td"), e = 0; e < b.length; e++) c.push(d[e].innerHTML);
    return c;
}, BaseRelation.prototype.getTuples = function(a, b) {
    for (var c = a.getElementsByTagName("tbody")[0].getElementsByTagName("tr"), d = (new Array(c.length), 
    0); d < c.length; d++) {
        var e = this.rowToArray(c[d], b);
        this.result.addTuple(e);
    }
}, BaseRelation.prototype.findTable = function(a) {
    for (var b = document.getElementsByClassName("relation"), c = 0; c < b.length; c++) {
        var d = b[c].getElementsByTagName("caption")[0];
        if (0 === d.innerText.indexOf(a)) return b[c];
    }
    throw "Tried to build table " + a + " but no such relation defined";
}, ColumnRenaming.prototype.exec = function() {
    this.child.exec(), this.result = new Relation(), this.buildAttrs();
    for (var a = this.child.result.tuples, b = 0; b < a.length; b++) this.result.addTuple(a[b].values);
}, ColumnRenaming.prototype.buildAttrs = function() {
    this.result.attributes = [];
    for (var a = this.child.result.attributes, b = 0; b < a.length; b++) {
        for (var c = !1, d = 0; d < this.renaming.length; d++) if (a[b][1] == this.renaming[d].oldname) {
            c = !0;
            var e = [ void 0, this.renaming[d].newname ];
            this.result.attributes.push(e);
        }
        c || this.result.attributes.push(a[b]);
    }
    console.log(this.result.attributes);
}, Cross.prototype.exec = function() {
    this.left.exec(), this.right.exec();
    var a = this.left.result, b = this.right.result;
    this.result = new Relation(), this.result.attributes = a.attributes.concat(b.attributes);
    for (var c = 0; c < a.tuples.length; c++) for (var d = 0; d < b.tuples.length; d++) {
        var e = a.tuples[c].values, f = b.tuples[d].values, g = e.concat(f);
        this.result.addTuple(g);
    }
}, Intersection.prototype.exec = function() {
    this.left.exec(), this.right.exec(), this.result = new Relation(), this.result.attributes = this.left.result.attributes.slice();
    for (var a = 0; a < this.left.result.tuples.length; a++) for (var b = 0; b < this.right.result.tuples.length; b++) {
        var c = this.left.result.tuples[a].values, d = this.right.result.tuples[b].values;
        console.log(c), console.log(d), console.log(c.join("|") == d.join("|")), c.join("|") == d.join("|") && this.result.addTuple(c);
    }
}, NaturalJoin.prototype.exec = function() {
    this.left.exec(), this.right.exec();
    var a = this.left.result.tuples, b = this.right.result.tuples;
    this.result = new Relation(), this.extractJoinAttrs(), this.buildNewAttrs();
    for (var c = 0; c < a.length; c++) for (var d = 0; d < b.length; d++) {
        var e = a[c], f = b[d];
        if (this.computeJoinPredicate(e, f)) {
            var g = this.builJointTuple(e, f);
            this.result.addTuple(g);
        }
    }
}, NaturalJoin.prototype.extractJoinAttrs = function() {
    this.joinAttrs = [ [], [] ];
    for (var a = this.left.result.attributes, b = this.right.result.attributes, c = 0; c < a.length; c++) for (var d = 0; d < b.length; d++) a[c][1] === b[d][1] && (this.joinAttrs[0].push(c), 
    this.joinAttrs[1].push(d));
}, NaturalJoin.prototype.buildNewAttrs = function() {
    for (var a = [], b = 0; b < this.left.result.attributes.length; b++) -1 === this.joinAttrs[0].indexOf(b) && a.push(this.left.result.attributes[b]);
    for (b = 0; b < this.joinAttrs[0].length; b++) {
        var c = [ void 0, this.left.result.attributes[this.joinAttrs[b]][1] ];
        a.push(c);
    }
    for (b = 0; b < this.right.result.attributes.length; b++) -1 === this.joinAttrs[1].indexOf(b) && a.push(this.right.result.attributes[b]);
    this.result.attributes = a;
}, NaturalJoin.prototype.computeJoinPredicate = function(a, b) {
    var c = !0;
    for (i = 0; i < this.joinAttrs[0].length; i++) l_idx = this.joinAttrs[0][i], r_idx = this.joinAttrs[1][i], 
    c = c && a.values[l_idx] == b.values[r_idx];
    return c;
}, NaturalJoin.prototype.builJointTuple = function(a, b) {
    for (var c = [], d = 0; d < a.values.length; d++) -1 === this.joinAttrs[0].indexOf(d) && c.push(a.values[d]);
    for (d = 0; d < this.joinAttrs[0].length; d++) c.push(a.values[this.joinAttrs[0][d]]);
    for (d = 0; d < b.values.length; d++) -1 === this.joinAttrs[1].indexOf(d) && c.push(b.values[d]);
    return c;
}, Projection.prototype.exec = function() {
    this.child.exec(), this.result = new Relation();
    for (var a = this.child.result.attributes, b = [], c = 0; c < a.length; c++) for (var d = a[c], e = 0; e < this.attrs.length; e++) if (-1 === this.attrs[e].indexOf(".") && this.attrs[e] === d[1] && (this.indecesToStay.push(c), 
    b.push(d)), this.attrs[e].indexOf(".") >= 0) {
        var f = this.attrs[e].split(".");
        f[0] === d[0] && f[1] === d[1] && (this.indecesToStay.push(c), b.push(d));
    }
    this.result.attributes = b;
    var g = this.child.result.tuples;
    for (c = 0; c < g.length; c++) {
        var h = this.project(g[c]);
        this.result.addTuple(h);
    }
}, Projection.prototype.project = function(a) {
    for (var b = [], c = 0; c < a.values.length; c++) -1 !== this.indecesToStay.indexOf(c) && b.push(a.values[c]);
    return b;
}, RelationRenaming.prototype.exec = function() {
    this.child.exec(), this.result = new Relation();
    for (var a = 0; a < this.child.result.attributes.length; a++) {
        var b = [ this.new_name, this.child.result.attributes[a][1] ];
        this.result.attributes.push(b);
    }
    for (a = 0; a < this.child.result.tuples.length; a++) this.result.addTuple(this.child.result.tuples[a].values);
}, Selection.prototype.exec = function() {
    this.child.exec();
    var a = this.child.result;
    this.result = new Relation(), this.result.attributes = this.child.result.attributes;
    for (var b = 0; b < a.tuples.length; b++) this.predicate(a.tuples[b]) && this.result.addTuple(a.tuples[b].values);
}, Selection.prototype.getAttr = function(a) {
    var b;
    if (-1 === a.indexOf(".")) for (var c = 0; c < this.result.attributes.length; c++) this.result.attributes[c][1] === a && (b = c); else for (var d = a.split("."), c = 0; c < this.result.attributes.length; c++) this.result.attributes[c][0] === d[0] && this.result.attributes[c][1] === d[1] && (b = c);
    return b;
}, Setminus.prototype.exec = function() {
    this.left.exec(), this.right.exec(), this.result = new Relation(), this.result.attributes = this.left.result.attributes.slice();
    for (var a = 0; a < this.left.result.tuples.length; a++) {
        for (var b = !1, c = 0; c < this.right.result.tuples.length; c++) {
            var d = this.left.result.tuples[a].values, e = this.right.result.tuples[c].values;
            b = b || d.join("|") == e.join("|");
        }
        b || this.result.addTuple(d);
    }
}, ThetaJoin.prototype.exec = function() {
    this.left.exec(), this.right.exec();
    var a = this.left.result, b = this.right.result;
    this.result = new Relation();
    var c = a.attributes.concat(b.attributes);
    this.result.attributes = c;
    for (var d = 0; d < a.tuples.length; d++) for (var e = 0; e < b.tuples.length; e++) {
        var f = a.tuples[d].values, g = b.tuples[e].values, h = f.concat(g), i = new Tuple(c, h);
        this.predicate(i) && this.result.addTuple(h);
    }
}, Union.prototype.exec = function() {
    this.left.exec(), this.right.exec(), this.result = new Relation(), this.result.attributes = this.left.result.attributes.slice();
    for (var a = 0; a < this.left.result.tuples.length; a++) this.result.addTuple(this.left.result.tuples[a].values);
    for (var a = 0; a < this.right.result.tuples.length; a++) this.result.addTuple(this.right.result.tuples[a].values);
}, QueryParser = function() {
    function a(a, b) {
        function c() {
            this.constructor = a;
        }
        c.prototype = b.prototype, a.prototype = new c();
    }
    function b(a, b, c, d, e, f) {
        this.message = a, this.expected = b, this.found = c, this.offset = d, this.line = e, 
        this.column = f, this.name = "SyntaxError";
    }
    function c(a) {
        function c(b) {
            function c(b, c, d) {
                var e, f;
                for (e = c; d > e; e++) f = a.charAt(e), "\n" === f ? (b.seenCR || b.line++, b.column = 1, 
                b.seenCR = !1) : "\r" === f || "\u2028" === f || "\u2029" === f ? (b.line++, b.column = 1, 
                b.seenCR = !0) : (b.column++, b.seenCR = !1);
            }
            return _b !== b && (_b > b && (_b = 0, ac = {
                line: 1,
                column: 1,
                seenCR: !1
            }), c(ac, _b, b), _b = b), ac;
        }
        function d(a) {
            bc > Zb || (Zb > bc && (bc = Zb, cc = []), cc.push(a));
        }
        function e(d, e, f) {
            function g(a) {
                var b = 1;
                for (a.sort(function(a, b) {
                    return a.description < b.description ? -1 : a.description > b.description ? 1 : 0;
                }); b < a.length; ) a[b - 1] === a[b] ? a.splice(b, 1) : b++;
            }
            function h(a, b) {
                function c(a) {
                    function b(a) {
                        return a.charCodeAt(0).toString(16).toUpperCase();
                    }
                    return a.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\x08/g, "\\b").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\f/g, "\\f").replace(/\r/g, "\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g, function(a) {
                        return "\\x0" + b(a);
                    }).replace(/[\x10-\x1F\x80-\xFF]/g, function(a) {
                        return "\\x" + b(a);
                    }).replace(/[\u0180-\u0FFF]/g, function(a) {
                        return "\\u0" + b(a);
                    }).replace(/[\u1080-\uFFFF]/g, function(a) {
                        return "\\u" + b(a);
                    });
                }
                var d, e, f, g = new Array(a.length);
                for (f = 0; f < a.length; f++) g[f] = a[f].description;
                return d = a.length > 1 ? g.slice(0, -1).join(", ") + " or " + g[a.length - 1] : g[0], 
                e = b ? '"' + c(b) + '"' : "end of input", "Expected " + d + " but " + e + " found.";
            }
            var i = c(f), j = f < a.length ? a.charAt(f) : null;
            return null !== e && g(e), new b(null !== d ? d : h(e, j), e, j, f, i.line, i.column);
        }
        function f() {
            var a, b = 20 * Zb + 0, c = ec[b];
            return c ? (Zb = c.nextPos, c.result) : (a = g(), ec[b] = {
                nextPos: Zb,
                result: a
            }, a);
        }
        function g() {
            var a, b = 20 * Zb + 1, c = ec[b];
            return c ? (Zb = c.nextPos, c.result) : (a = h(), a === B && (a = k(), a === B && (a = o(), 
            a === B && (a = q(), a === B && (a = r(), a === B && (a = u(), a === B && (a = v(), 
            a === B && (a = w(), a === B && (a = x(), a === B && (a = y()))))))))), ec[b] = {
                nextPos: Zb,
                result: a
            }, a);
        }
        function h() {
            var a, b, c = 20 * Zb + 2, d = ec[c];
            return d ? (Zb = d.nextPos, d.result) : (a = Zb, b = i(), b !== B && ($b = a, b = E(b)), 
            a = b, ec[c] = {
                nextPos: Zb,
                result: a
            }, a);
        }
        function i() {
            var b, c, e, f = 20 * Zb + 3, g = ec[f];
            if (g) return Zb = g.nextPos, g.result;
            if (b = Zb, c = [], G.test(a.charAt(Zb)) ? (e = a.charAt(Zb), Zb++) : (e = B, 0 === dc && d(H)), 
            e !== B) for (;e !== B; ) c.push(e), G.test(a.charAt(Zb)) ? (e = a.charAt(Zb), Zb++) : (e = B, 
            0 === dc && d(H)); else c = F;
            return c !== B && ($b = b, c = I(c)), b = c, ec[f] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        function j() {
            var b, c, e, f, g, h = 20 * Zb + 4, j = ec[h];
            if (j) return Zb = j.nextPos, j.result;
            if (b = Zb, c = i(), c !== B) if (46 === a.charCodeAt(Zb) ? (e = J, Zb++) : (e = B, 
            0 === dc && d(K)), e !== B) {
                if (f = [], G.test(a.charAt(Zb)) ? (g = a.charAt(Zb), Zb++) : (g = B, 0 === dc && d(H)), 
                g !== B) for (;g !== B; ) f.push(g), G.test(a.charAt(Zb)) ? (g = a.charAt(Zb), Zb++) : (g = B, 
                0 === dc && d(H)); else f = F;
                f !== B ? ($b = b, c = L(c, f), b = c) : (Zb = b, b = F);
            } else Zb = b, b = F; else Zb = b, b = F;
            if (b === B) {
                if (b = Zb, c = [], G.test(a.charAt(Zb)) ? (e = a.charAt(Zb), Zb++) : (e = B, 0 === dc && d(H)), 
                e !== B) for (;e !== B; ) c.push(e), G.test(a.charAt(Zb)) ? (e = a.charAt(Zb), Zb++) : (e = B, 
                0 === dc && d(H)); else c = F;
                c !== B && ($b = b, c = I(c)), b = c;
            }
            return ec[h] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        function k() {
            var b, c, e, f, h, i, j = 20 * Zb + 5, k = ec[j];
            return k ? (Zb = k.nextPos, k.result) : (b = Zb, a.substr(Zb, 7) === M ? (c = M, 
            Zb += 7) : (c = B, 0 === dc && d(N)), c !== B ? (e = l(), e !== B ? (a.substr(Zb, 2) === O ? (f = O, 
            Zb += 2) : (f = B, 0 === dc && d(P)), f !== B ? (h = g(), h !== B ? (41 === a.charCodeAt(Zb) ? (i = Q, 
            Zb++) : (i = B, 0 === dc && d(R)), i !== B ? ($b = b, c = S(e, h), b = c) : (Zb = b, 
            b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F), 
            ec[j] = {
                nextPos: Zb,
                result: b
            }, b);
        }
        function l() {
            var b, c, e, f, g, h, i = 20 * Zb + 6, j = ec[i];
            if (j) return Zb = j.nextPos, j.result;
            if (b = Zb, c = n(), c !== B) {
                for (e = [], T.test(a.charAt(Zb)) ? (f = a.charAt(Zb), Zb++) : (f = B, 0 === dc && d(U)); f !== B; ) e.push(f), 
                T.test(a.charAt(Zb)) ? (f = a.charAt(Zb), Zb++) : (f = B, 0 === dc && d(U));
                if (e !== B) if (f = m(), f !== B) {
                    for (g = [], T.test(a.charAt(Zb)) ? (h = a.charAt(Zb), Zb++) : (h = B, 0 === dc && d(U)); h !== B; ) g.push(h), 
                    T.test(a.charAt(Zb)) ? (h = a.charAt(Zb), Zb++) : (h = B, 0 === dc && d(U));
                    g !== B ? (h = n(), h !== B ? ($b = b, c = V(c, f, h), b = c) : (Zb = b, b = F)) : (Zb = b, 
                    b = F);
                } else Zb = b, b = F; else Zb = b, b = F;
            } else Zb = b, b = F;
            return ec[i] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        function m() {
            var b, c = 20 * Zb + 7, e = ec[c];
            return e ? (Zb = e.nextPos, e.result) : (a.substr(Zb, 2) === W ? (b = W, Zb += 2) : (b = B, 
            0 === dc && d(X)), b === B && (a.substr(Zb, 2) === Y ? (b = Y, Zb += 2) : (b = B, 
            0 === dc && d(Z)), b === B && (a.substr(Zb, 2) === $ ? (b = $, Zb += 2) : (b = B, 
            0 === dc && d(_)), b === B && (a.substr(Zb, 2) === ab ? (b = ab, Zb += 2) : (b = B, 
            0 === dc && d(bb)), b === B && (60 === a.charCodeAt(Zb) ? (b = cb, Zb++) : (b = B, 
            0 === dc && d(db)), b === B && (62 === a.charCodeAt(Zb) ? (b = eb, Zb++) : (b = B, 
            0 === dc && d(fb))))))), ec[c] = {
                nextPos: Zb,
                result: b
            }, b);
        }
        function n() {
            var b, c, e, f, g = 20 * Zb + 8, h = ec[g];
            if (h) return Zb = h.nextPos, h.result;
            if (b = Zb, c = j(), c !== B && ($b = b, c = gb(c)), b = c, b === B) {
                if (b = Zb, 34 === a.charCodeAt(Zb) ? (c = hb, Zb++) : (c = B, 0 === dc && d(ib)), 
                c !== B) {
                    if (e = [], jb.test(a.charAt(Zb)) ? (f = a.charAt(Zb), Zb++) : (f = B, 0 === dc && d(kb)), 
                    f !== B) for (;f !== B; ) e.push(f), jb.test(a.charAt(Zb)) ? (f = a.charAt(Zb), 
                    Zb++) : (f = B, 0 === dc && d(kb)); else e = F;
                    e !== B ? (34 === a.charCodeAt(Zb) ? (f = hb, Zb++) : (f = B, 0 === dc && d(ib)), 
                    f !== B ? ($b = b, c = lb(e), b = c) : (Zb = b, b = F)) : (Zb = b, b = F);
                } else Zb = b, b = F;
                if (b === B) {
                    if (b = Zb, c = [], mb.test(a.charAt(Zb)) ? (e = a.charAt(Zb), Zb++) : (e = B, 0 === dc && d(nb)), 
                    e !== B) for (;e !== B; ) c.push(e), mb.test(a.charAt(Zb)) ? (e = a.charAt(Zb), 
                    Zb++) : (e = B, 0 === dc && d(nb)); else c = F;
                    c !== B && ($b = b, c = ob(c)), b = c;
                }
            }
            return ec[g] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        function o() {
            var b, c, e, f, h, i, j = 20 * Zb + 9, k = ec[j];
            return k ? (Zb = k.nextPos, k.result) : (b = Zb, a.substr(Zb, 4) === pb ? (c = pb, 
            Zb += 4) : (c = B, 0 === dc && d(qb)), c !== B ? (e = p(), e !== B ? (a.substr(Zb, 2) === O ? (f = O, 
            Zb += 2) : (f = B, 0 === dc && d(P)), f !== B ? (h = g(), h !== B ? (41 === a.charCodeAt(Zb) ? (i = Q, 
            Zb++) : (i = B, 0 === dc && d(R)), i !== B ? ($b = b, c = rb(e, h), b = c) : (Zb = b, 
            b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F), 
            ec[j] = {
                nextPos: Zb,
                result: b
            }, b);
        }
        function p() {
            var b, c, e, f, g = 20 * Zb + 10, h = ec[g];
            return h ? (Zb = h.nextPos, h.result) : (b = Zb, c = j(), c !== B ? (44 === a.charCodeAt(Zb) ? (e = sb, 
            Zb++) : (e = B, 0 === dc && d(tb)), e !== B ? (f = p(), f !== B ? ($b = b, c = ub(c, f), 
            b = c) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F), b === B && (b = Zb, 
            c = j(), c !== B && ($b = b, c = vb(c)), b = c), ec[g] = {
                nextPos: Zb,
                result: b
            }, b);
        }
        function q() {
            var b, c, e, f, h, j, k = 20 * Zb + 11, l = ec[k];
            return l ? (Zb = l.nextPos, l.result) : (b = Zb, a.substr(Zb, 5) === wb ? (c = wb, 
            Zb += 5) : (c = B, 0 === dc && d(xb)), c !== B ? (e = i(), e !== B ? (a.substr(Zb, 2) === O ? (f = O, 
            Zb += 2) : (f = B, 0 === dc && d(P)), f !== B ? (h = g(), h !== B ? (41 === a.charCodeAt(Zb) ? (j = Q, 
            Zb++) : (j = B, 0 === dc && d(R)), j !== B ? ($b = b, c = yb(e, h), b = c) : (Zb = b, 
            b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F), 
            ec[k] = {
                nextPos: Zb,
                result: b
            }, b);
        }
        function r() {
            var b, c, e, f, h, i, j = 20 * Zb + 12, k = ec[j];
            return k ? (Zb = k.nextPos, k.result) : (b = Zb, a.substr(Zb, 5) === wb ? (c = wb, 
            Zb += 5) : (c = B, 0 === dc && d(xb)), c !== B ? (e = s(), e !== B ? (a.substr(Zb, 2) === O ? (f = O, 
            Zb += 2) : (f = B, 0 === dc && d(P)), f !== B ? (h = g(), h !== B ? (41 === a.charCodeAt(Zb) ? (i = Q, 
            Zb++) : (i = B, 0 === dc && d(R)), i !== B ? ($b = b, c = zb(e, h), b = c) : (Zb = b, 
            b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F), 
            ec[j] = {
                nextPos: Zb,
                result: b
            }, b);
        }
        function s() {
            var b, c, e, f, g, h, i = 20 * Zb + 13, j = ec[i];
            if (j) return Zb = j.nextPos, j.result;
            if (b = Zb, c = t(), c !== B) {
                for (e = [], T.test(a.charAt(Zb)) ? (f = a.charAt(Zb), Zb++) : (f = B, 0 === dc && d(U)); f !== B; ) e.push(f), 
                T.test(a.charAt(Zb)) ? (f = a.charAt(Zb), Zb++) : (f = B, 0 === dc && d(U));
                if (e !== B) if (44 === a.charCodeAt(Zb) ? (f = sb, Zb++) : (f = B, 0 === dc && d(tb)), 
                f !== B) {
                    for (g = [], T.test(a.charAt(Zb)) ? (h = a.charAt(Zb), Zb++) : (h = B, 0 === dc && d(U)); h !== B; ) g.push(h), 
                    T.test(a.charAt(Zb)) ? (h = a.charAt(Zb), Zb++) : (h = B, 0 === dc && d(U));
                    g !== B ? (h = s(), h !== B ? ($b = b, c = Ab(c, h), b = c) : (Zb = b, b = F)) : (Zb = b, 
                    b = F);
                } else Zb = b, b = F; else Zb = b, b = F;
            } else Zb = b, b = F;
            return b === B && (b = Zb, c = t(), c !== B && ($b = b, c = Bb(c)), b = c), ec[i] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        function t() {
            var b, c, e, f, g, h, k = 20 * Zb + 14, l = ec[k];
            if (l) return Zb = l.nextPos, l.result;
            if (b = Zb, c = j(), c !== B) {
                for (e = [], T.test(a.charAt(Zb)) ? (f = a.charAt(Zb), Zb++) : (f = B, 0 === dc && d(U)); f !== B; ) e.push(f), 
                T.test(a.charAt(Zb)) ? (f = a.charAt(Zb), Zb++) : (f = B, 0 === dc && d(U));
                if (e !== B) if (a.substr(Zb, 2) === Cb ? (f = Cb, Zb += 2) : (f = B, 0 === dc && d(Db)), 
                f !== B) {
                    for (g = [], T.test(a.charAt(Zb)) ? (h = a.charAt(Zb), Zb++) : (h = B, 0 === dc && d(U)); h !== B; ) g.push(h), 
                    T.test(a.charAt(Zb)) ? (h = a.charAt(Zb), Zb++) : (h = B, 0 === dc && d(U));
                    g !== B ? (h = j(), h !== B ? ($b = b, c = Eb(c, h), b = c) : (Zb = b, b = F)) : (Zb = b, 
                    b = F);
                } else Zb = b, b = F; else Zb = b, b = F;
            } else Zb = b, b = F;
            return b === B && (b = i()), ec[k] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        function u() {
            var b, c, e, f, h, i, j, k, l, m, n = 20 * Zb + 15, o = ec[n];
            if (o) return Zb = o.nextPos, o.result;
            if (b = Zb, 40 === a.charCodeAt(Zb) ? (c = Fb, Zb++) : (c = B, 0 === dc && d(Gb)), 
            c !== B) if (e = g(), e !== B) if (41 === a.charCodeAt(Zb) ? (f = Q, Zb++) : (f = B, 
            0 === dc && d(R)), f !== B) {
                for (h = [], T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U)); i !== B; ) h.push(i), 
                T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U));
                if (h !== B) if (a.substr(Zb, 6) === Hb ? (i = Hb, Zb += 6) : (i = B, 0 === dc && d(Ib)), 
                i !== B) {
                    for (j = [], T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U)); k !== B; ) j.push(k), 
                    T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U));
                    j !== B ? (40 === a.charCodeAt(Zb) ? (k = Fb, Zb++) : (k = B, 0 === dc && d(Gb)), 
                    k !== B ? (l = g(), l !== B ? (41 === a.charCodeAt(Zb) ? (m = Q, Zb++) : (m = B, 
                    0 === dc && d(R)), m !== B ? ($b = b, c = Jb(e, l), b = c) : (Zb = b, b = F)) : (Zb = b, 
                    b = F)) : (Zb = b, b = F)) : (Zb = b, b = F);
                } else Zb = b, b = F; else Zb = b, b = F;
            } else Zb = b, b = F; else Zb = b, b = F; else Zb = b, b = F;
            return ec[n] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        function v() {
            var b, c, e, f, h, i, j, k, m, n, o, p, q = 20 * Zb + 16, r = ec[q];
            if (r) return Zb = r.nextPos, r.result;
            if (b = Zb, 40 === a.charCodeAt(Zb) ? (c = Fb, Zb++) : (c = B, 0 === dc && d(Gb)), 
            c !== B) if (e = g(), e !== B) if (41 === a.charCodeAt(Zb) ? (f = Q, Zb++) : (f = B, 
            0 === dc && d(R)), f !== B) {
                for (h = [], T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U)); i !== B; ) h.push(i), 
                T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U));
                if (h !== B) if (a.substr(Zb, 5) === Kb ? (i = Kb, Zb += 5) : (i = B, 0 === dc && d(Lb)), 
                i !== B) {
                    for (j = [], T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U)); k !== B; ) j.push(k), 
                    T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U));
                    j !== B ? (91 === a.charCodeAt(Zb) ? (k = Mb, Zb++) : (k = B, 0 === dc && d(Nb)), 
                    k !== B ? (m = l(), m !== B ? (a.substr(Zb, 2) === O ? (n = O, Zb += 2) : (n = B, 
                    0 === dc && d(P)), n !== B ? (o = g(), o !== B ? (41 === a.charCodeAt(Zb) ? (p = Q, 
                    Zb++) : (p = B, 0 === dc && d(R)), p !== B ? ($b = b, c = Ob(e, m, o), b = c) : (Zb = b, 
                    b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, b = F)) : (Zb = b, 
                    b = F);
                } else Zb = b, b = F; else Zb = b, b = F;
            } else Zb = b, b = F; else Zb = b, b = F; else Zb = b, b = F;
            if (b === B) if (b = Zb, 40 === a.charCodeAt(Zb) ? (c = Fb, Zb++) : (c = B, 0 === dc && d(Gb)), 
            c !== B) if (e = g(), e !== B) if (41 === a.charCodeAt(Zb) ? (f = Q, Zb++) : (f = B, 
            0 === dc && d(R)), f !== B) {
                for (h = [], T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U)); i !== B; ) h.push(i), 
                T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U));
                if (h !== B) if (a.substr(Zb, 5) === Kb ? (i = Kb, Zb += 5) : (i = B, 0 === dc && d(Lb)), 
                i !== B) {
                    for (j = [], T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U)); k !== B; ) j.push(k), 
                    T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U));
                    j !== B ? (40 === a.charCodeAt(Zb) ? (k = Fb, Zb++) : (k = B, 0 === dc && d(Gb)), 
                    k !== B ? (m = g(), m !== B ? (41 === a.charCodeAt(Zb) ? (n = Q, Zb++) : (n = B, 
                    0 === dc && d(R)), n !== B ? ($b = b, c = Pb(e, m), b = c) : (Zb = b, b = F)) : (Zb = b, 
                    b = F)) : (Zb = b, b = F)) : (Zb = b, b = F);
                } else Zb = b, b = F; else Zb = b, b = F;
            } else Zb = b, b = F; else Zb = b, b = F; else Zb = b, b = F;
            return ec[q] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        function w() {
            var b, c, e, f, h, i, j, k, l, m, n = 20 * Zb + 17, o = ec[n];
            if (o) return Zb = o.nextPos, o.result;
            if (b = Zb, 40 === a.charCodeAt(Zb) ? (c = Fb, Zb++) : (c = B, 0 === dc && d(Gb)), 
            c !== B) if (e = g(), e !== B) if (41 === a.charCodeAt(Zb) ? (f = Q, Zb++) : (f = B, 
            0 === dc && d(R)), f !== B) {
                for (h = [], T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U)); i !== B; ) h.push(i), 
                T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U));
                if (h !== B) if (a.substr(Zb, 4) === Qb ? (i = Qb, Zb += 4) : (i = B, 0 === dc && d(Rb)), 
                i !== B) {
                    for (j = [], T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U)); k !== B; ) j.push(k), 
                    T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U));
                    j !== B ? (40 === a.charCodeAt(Zb) ? (k = Fb, Zb++) : (k = B, 0 === dc && d(Gb)), 
                    k !== B ? (l = g(), l !== B ? (41 === a.charCodeAt(Zb) ? (m = Q, Zb++) : (m = B, 
                    0 === dc && d(R)), m !== B ? ($b = b, c = Sb(e, l), b = c) : (Zb = b, b = F)) : (Zb = b, 
                    b = F)) : (Zb = b, b = F)) : (Zb = b, b = F);
                } else Zb = b, b = F; else Zb = b, b = F;
            } else Zb = b, b = F; else Zb = b, b = F; else Zb = b, b = F;
            return ec[n] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        function x() {
            var b, c, e, f, h, i, j, k, l, m, n = 20 * Zb + 18, o = ec[n];
            if (o) return Zb = o.nextPos, o.result;
            if (b = Zb, 40 === a.charCodeAt(Zb) ? (c = Fb, Zb++) : (c = B, 0 === dc && d(Gb)), 
            c !== B) if (e = g(), e !== B) if (41 === a.charCodeAt(Zb) ? (f = Q, Zb++) : (f = B, 
            0 === dc && d(R)), f !== B) {
                for (h = [], T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U)); i !== B; ) h.push(i), 
                T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U));
                if (h !== B) if (a.substr(Zb, 4) === Tb ? (i = Tb, Zb += 4) : (i = B, 0 === dc && d(Ub)), 
                i !== B) {
                    for (j = [], T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U)); k !== B; ) j.push(k), 
                    T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U));
                    j !== B ? (40 === a.charCodeAt(Zb) ? (k = Fb, Zb++) : (k = B, 0 === dc && d(Gb)), 
                    k !== B ? (l = g(), l !== B ? (41 === a.charCodeAt(Zb) ? (m = Q, Zb++) : (m = B, 
                    0 === dc && d(R)), m !== B ? ($b = b, c = Vb(e, l), b = c) : (Zb = b, b = F)) : (Zb = b, 
                    b = F)) : (Zb = b, b = F)) : (Zb = b, b = F);
                } else Zb = b, b = F; else Zb = b, b = F;
            } else Zb = b, b = F; else Zb = b, b = F; else Zb = b, b = F;
            return ec[n] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        function y() {
            var b, c, e, f, h, i, j, k, l, m, n = 20 * Zb + 19, o = ec[n];
            if (o) return Zb = o.nextPos, o.result;
            if (b = Zb, 40 === a.charCodeAt(Zb) ? (c = Fb, Zb++) : (c = B, 0 === dc && d(Gb)), 
            c !== B) if (e = g(), e !== B) if (41 === a.charCodeAt(Zb) ? (f = Q, Zb++) : (f = B, 
            0 === dc && d(R)), f !== B) {
                for (h = [], T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U)); i !== B; ) h.push(i), 
                T.test(a.charAt(Zb)) ? (i = a.charAt(Zb), Zb++) : (i = B, 0 === dc && d(U));
                if (h !== B) if (45 === a.charCodeAt(Zb) ? (i = Wb, Zb++) : (i = B, 0 === dc && d(Xb)), 
                i !== B) {
                    for (j = [], T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U)); k !== B; ) j.push(k), 
                    T.test(a.charAt(Zb)) ? (k = a.charAt(Zb), Zb++) : (k = B, 0 === dc && d(U));
                    j !== B ? (40 === a.charCodeAt(Zb) ? (k = Fb, Zb++) : (k = B, 0 === dc && d(Gb)), 
                    k !== B ? (l = g(), l !== B ? (41 === a.charCodeAt(Zb) ? (m = Q, Zb++) : (m = B, 
                    0 === dc && d(R)), m !== B ? ($b = b, c = Yb(e, l), b = c) : (Zb = b, b = F)) : (Zb = b, 
                    b = F)) : (Zb = b, b = F)) : (Zb = b, b = F);
                } else Zb = b, b = F; else Zb = b, b = F;
            } else Zb = b, b = F; else Zb = b, b = F; else Zb = b, b = F;
            return ec[n] = {
                nextPos: Zb,
                result: b
            }, b;
        }
        var z, A = arguments.length > 1 ? arguments[1] : {}, B = {}, C = {
            start: f
        }, D = f, E = function(a) {
            return new BaseRelation(a);
        }, F = B, G = /^[a-zA-Z_]/, H = {
            type: "class",
            value: "[a-zA-Z_]",
            description: "[a-zA-Z_]"
        }, I = function(a) {
            return a.join("");
        }, J = ".", K = {
            type: "literal",
            value: ".",
            description: '"."'
        }, L = function(a, b) {
            return a + "." + b.join("");
        }, M = "\\sigma[", N = {
            type: "literal",
            value: "\\sigma[",
            description: '"\\\\sigma["'
        }, O = "](", P = {
            type: "literal",
            value: "](",
            description: '"]("'
        }, Q = ")", R = {
            type: "literal",
            value: ")",
            description: '")"'
        }, S = function(a, b) {
            return new Selection(a, b);
        }, T = /^[ ]/, U = {
            type: "class",
            value: "[ ]",
            description: "[ ]"
        }, V = function(a, b, c) {
            return Function("tuple", "return " + a + b + c);
        }, W = "==", X = {
            type: "literal",
            value: "==",
            description: '"=="'
        }, Y = "!=", Z = {
            type: "literal",
            value: "!=",
            description: '"!="'
        }, $ = "<=", _ = {
            type: "literal",
            value: "<=",
            description: '"<="'
        }, ab = ">=", bb = {
            type: "literal",
            value: ">=",
            description: '">="'
        }, cb = "<", db = {
            type: "literal",
            value: "<",
            description: '"<"'
        }, eb = ">", fb = {
            type: "literal",
            value: ">",
            description: '">"'
        }, gb = function(a) {
            return "tuple.get('" + a + "')";
        }, hb = '"', ib = {
            type: "literal",
            value: '"',
            description: '"\\""'
        }, jb = /^[^"]/, kb = {
            type: "class",
            value: '[^"]',
            description: '[^"]'
        }, lb = function(a) {
            return '"' + a.join("") + '"';
        }, mb = /^[0-9]/, nb = {
            type: "class",
            value: "[0-9]",
            description: "[0-9]"
        }, ob = function(a) {
            return parseInt(a.join(""), 10);
        }, pb = "\\pi[", qb = {
            type: "literal",
            value: "\\pi[",
            description: '"\\\\pi["'
        }, rb = function(a, b) {
            return new Projection(a, b);
        }, sb = ",", tb = {
            type: "literal",
            value: ",",
            description: '","'
        }, ub = function(a, b) {
            return [ a ].concat(b);
        }, vb = function(a) {
            return [ a ];
        }, wb = "\\rho[", xb = {
            type: "literal",
            value: "\\rho[",
            description: '"\\\\rho["'
        }, yb = function(a, b) {
            return new RelationRenaming(a, b);
        }, zb = function(a, b) {
            return new ColumnRenaming(a, b);
        }, Ab = function(a, b) {
            return [ a ].concat(b);
        }, Bb = function(a) {
            return [ a ];
        }, Cb = "<-", Db = {
            type: "literal",
            value: "<-",
            description: '"<-"'
        }, Eb = function(a, b) {
            return {
                newname: a,
                oldname: b
            };
        }, Fb = "(", Gb = {
            type: "literal",
            value: "(",
            description: '"("'
        }, Hb = "\\times", Ib = {
            type: "literal",
            value: "\\times",
            description: '"\\\\times"'
        }, Jb = function(a, b) {
            return new Cross(a, b);
        }, Kb = "\\join", Lb = {
            type: "literal",
            value: "\\join",
            description: '"\\\\join"'
        }, Mb = "[", Nb = {
            type: "literal",
            value: "[",
            description: '"["'
        }, Ob = function(a, b, c) {
            return new ThetaJoin(a, c, b);
        }, Pb = function(a, b) {
            return new NaturalJoin(a, b);
        }, Qb = "\\cup", Rb = {
            type: "literal",
            value: "\\cup",
            description: '"\\\\cup"'
        }, Sb = function(a, b) {
            return new Union(a, b);
        }, Tb = "\\cap", Ub = {
            type: "literal",
            value: "\\cap",
            description: '"\\\\cap"'
        }, Vb = function(a, b) {
            return new Intersection(a, b);
        }, Wb = "-", Xb = {
            type: "literal",
            value: "-",
            description: '"-"'
        }, Yb = function(a, b) {
            return new Setminus(a, b);
        }, Zb = 0, $b = 0, _b = 0, ac = {
            line: 1,
            column: 1,
            seenCR: !1
        }, bc = 0, cc = [], dc = 0, ec = {};
        if ("startRule" in A) {
            if (!(A.startRule in C)) throw new Error("Can't start parsing from rule \"" + A.startRule + '".');
            D = C[A.startRule];
        }
        if (z = D(), z !== B && Zb === a.length) return z;
        throw z !== B && Zb < a.length && d({
            type: "end",
            description: "end of input"
        }), e(null, cc, bc);
    }
    return a(b, Error), {
        SyntaxError: b,
        parse: c
    };
}(), Relation.prototype.addTuple = function(a) {
    for (var b = new Tuple(this.attributes, a), c = 0; c < this.tuples.length; c++) {
        var d = !0;
        for (j = 0; j < this.tuples[c].values.length; j++) d = d && this.tuples[c].values[j] === a[j];
        if (d) return this.length;
    }
    this.tuples.push(b);
}, Tuple.prototype.get = function(a) {
    return -1 === a.indexOf(".") ? this.getSimple(a) : this.getQualified(a);
}, Tuple.prototype.getSimple = function(a) {
    for (var b = 0; b < this.attributes.length; b++) if (a === this.attributes[b][1]) return this.values[b];
}, Tuple.prototype.getQualified = function(a) {
    for (var b = a.split("."), c = 0; c < this.attributes.length; c++) if (b[0] === this.attributes[c][0] && b[1] === this.attributes[c][1]) return this.values[c];
};